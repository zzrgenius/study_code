# cmake_minimum_required(VERSION 3.0.0)
# project(print_hello VERSION 0.1.0)
# set(INC_DIR ./print_hello)
# set(LINK_DIR ./print_hello)
# include_directories(INC_DIR)
# link_directories(LINK_DIR)
# add_executable(print_hello hello.c)
# # find_library(liblhello NAME lhello PATHS ./print_hello)
# add_library(liblhello SHARED IMPORTED)
# set(CPACK_PROJECT_NAME ${PROJECT_NAME})
# set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
# target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_BINARY_DIR})
# target_include_directories(${PROJECT_NAME} PUBLIC ${INC_DIR})
# target_link_libraries(${PROJECT_NAME} liblhello)

cmake_minimum_required(VERSION 3.0.0)
project(print_hello VERSION 0.1.0)
set(INC_DIR ./print_hello)
set(LINK_DIR ./print_hello)
include_directories(INC_DIR)
link_directories(LINK_DIR)
add_executable(print_hello hello.c)
# find_library(liblhello NAME lhello PATHS ./print_hello)
add_library(hello SHARED IMPORTED)
set_target_properties(hello PROPERTIES IMPORTED_LOCATION                        ${CMAKE_SOURCE_DIR}/print_hello/liblhello.so)
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_BINARY_DIR})
target_include_directories(${PROJECT_NAME} PUBLIC ${INC_DIR})
target_link_libraries(${PROJECT_NAME} hello)

 